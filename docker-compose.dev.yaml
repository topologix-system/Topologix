services:
  batfish:
    image: batfish/allinone:latest
    container_name: batfish
    ports:
      - "8888:8888"
      - "9996:9996"
      - "9997:9997"
    volumes:
      - batfish-data:/data
      - ./snapshots:/notebooks/snapshots
      - ./backend/snapshots:/snapshots
      - ./backend/notebooks:/notebooks
      - ./backend/configs:/notebooks/configs
    networks:
      - topologix-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: topologix-backend
    command:
      - /bin/sh
      - -c
      - ${BACKEND_COMMAND:-python app.py}
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-True}
      - BATFISH_HOST=${BATFISH_HOST:-batfish}
      - BATFISH_PORT=${BATFISH_PORT:-9996}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      - AUTH_ENABLED=${AUTH_ENABLED:-true}
      - AUTH_DEFAULT_ADMIN_USER=${AUTH_DEFAULT_ADMIN_USER:-admin}
      - AUTH_DEFAULT_ADMIN_PASS=${AUTH_DEFAULT_ADMIN_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CSRF_SECRET_KEY=${CSRF_SECRET_KEY}
      - LOGIN_MAX_ATTEMPTS_PER_USER=${LOGIN_MAX_ATTEMPTS_PER_USER:-5}
      - LOGIN_MAX_ATTEMPTS_PER_IP=${LOGIN_MAX_ATTEMPTS_PER_IP:-10}
      - LOGIN_RATE_WINDOW_MINUTES=${LOGIN_RATE_WINDOW_MINUTES:-15}
      - LOGIN_LOCKOUT_DURATION_MINUTES=${LOGIN_LOCKOUT_DURATION_MINUTES:-30}
      - DATABASE_URL=${DATABASE_URL:-sqlite:////app/data/topologix.db}
      - EMAIL_PROVIDER=${EMAIL_PROVIDER:-console}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@topologix.local}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME:-Topologix}
      - SMTP_HOST=${SMTP_HOST:-localhost}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_USE_TLS=${SMTP_USE_TLS:-true}
      - PASSWORD_RESET_TOKEN_EXPIRY=${PASSWORD_RESET_TOKEN_EXPIRY:-3600}
      - PASSWORD_RESET_URL_BASE=${PASSWORD_RESET_URL_BASE:-http://localhost:3000}
      - TRUSTED_PROXY_COUNT=${TRUSTED_PROXY_COUNT:-1}
    volumes:
      - ./backend:/app
      - ./snapshots:/snapshots
      - backend-db:/app/data
      - flask-sessions:/app/flask_session
    networks:
      - topologix-network
    depends_on:
      - batfish
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: "${VITE_API_BASE_URL:-}"
        VITE_AUTH_ENABLED: "${VITE_AUTH_ENABLED:-true}"
        VITE_TIMEZONE: "${VITE_TIMEZONE:-Asia/Tokyo}"
    container_name: topologix-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-}
      - VITE_AUTH_ENABLED=${VITE_AUTH_ENABLED:-true}
    volumes:
      - frontend-modules:/app/node_modules
      - ./frontend:/app
    networks:
      - topologix-network
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

networks:
  topologix-network:
    driver: bridge
    name: topologix-network

volumes:
  batfish-data:
    name: topologix-batfish-data
  backend-db:
    name: topologix-backend-db
  flask-sessions:
    name: topologix-flask-sessions
  frontend-modules:
    name: topologix-frontend-modules
